from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import CallbackQueryHandler, ContextTypes, CommandHandler
from bot.storage import Storage
from config.config import Config
db = Storage()


async def confirm_payment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã –∞–¥–º–∏–Ω–æ–º"""
    query = update.callback_query
    await query.answer()

    # –§–æ—Ä–º–∞—Ç: confirm_{user_id}_{amount}
    parts = query.data.split('_')
    if len(parts) < 3:
        await query.answer("‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞")
        return

    user_id = int(parts[1])
    amount = parts[2]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    try:
        await context.bot.send_message(
            chat_id=user_id,
            text=f"‚úÖ <b>–û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!</b>\n\n"
                 f"üí≥ –°—É–º–º–∞: {amount} BYN\n"
                 f"üéÆ –¢–æ–≤–∞—Ä –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n"
                 f"–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! üõí",
            parse_mode="HTML"
        )

        # –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db.save_cart(user_id, {"items": []})

        await query.edit_message_text(
            f"‚úÖ –û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}\n"
            f"üí∞ –°—É–º–º–∞: {amount} BYN"
        )

    except Exception as e:
        await query.answer(f"‚ùå –û—à–∏–±–∫–∞: {e}")


async def reject_payment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã –∞–¥–º–∏–Ω–æ–º"""
    query = update.callback_query
    await query.answer()

    parts = query.data.split('_')
    if len(parts) < 3:
        await query.answer("‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞")
        return

    user_id = int(parts[1])
    amount = parts[2]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    try:
        await context.bot.send_message(
            chat_id=user_id,
            text=f"‚ùå <b>–û–ø–ª–∞—Ç–∞ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞</b>\n\n"
                 f"üí≥ –°—É–º–º–∞: {amount} BYN\n"
                 f"‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ, —á–µ–∫ –Ω–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –æ–ø–ª–∞—Ç–∞ –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª–∞\n\n"
                 f"–°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è",
            parse_mode="HTML"
        )

        await query.edit_message_text(
            f"‚ùå –û–ø–ª–∞—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}\n"
            f"üí∞ –°—É–º–º–∞: {amount} BYN"
        )

    except Exception as e:
        await query.answer(f"‚ùå –û—à–∏–±–∫–∞: {e}")


async def admin_stats(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞"""
    if update.message.from_user.id != Config.ADMIN_ID:
        return

    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    await update.message.reply_text("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–¥–º–∏–Ω–∞")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥
admin_handlers = [
    CallbackQueryHandler(confirm_payment, pattern="^confirm_"),
    CallbackQueryHandler(reject_payment, pattern="^reject_"),
    CommandHandler("stats", admin_stats)
]